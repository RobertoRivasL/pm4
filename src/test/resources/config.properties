# ====================================================================
# CONFIGURACIÓN GLOBAL DE LA SUITE DE AUTOMATIZACIÓN
# Proyecto: Suite de Automatización Funcional
# Autor: Roberto Rivas Lopez
# Versión: 1.0.0
# ====================================================================

# ====== CONFIGURACIÓN DE URL BASE ======
# URL principal de la aplicación a probar
url.base=https://example.com

# URLs específicas para diferentes módulos (opcional)
url.login=/login
url.registro=/register
url.dashboard=/dashboard
url.perfil=/profile

# ====== CONFIGURACIÓN DEL NAVEGADOR ======
# Tipo de navegador: CHROME, FIREFOX, EDGE, SAFARI
navegador.tipo=CHROME

# Ejecutar en modo headless (sin interfaz gráfica)
navegador.headless=false

# Maximizar ventana del navegador al iniciar
navegador.maximizar=true

# Dimensiones de la ventana (si no se maximiza)
navegador.ancho=1920
navegador.alto=1080

# ====== CONFIGURACIÓN DE TIMEOUTS ======
# Timeout implícito en segundos (tiempo de espera por defecto para encontrar elementos)
timeout.implicito=10

# Timeout explícito en segundos (tiempo de espera para condiciones específicas)
timeout.explicito=15

# Timeout para carga de página en segundos
timeout.carga.pagina=30

# Timeout para Ajax/JavaScript en segundos
timeout.ajax=20

# ====== CONFIGURACIÓN DE DIRECTORIOS ======
# Directorio donde se guardan las capturas de pantalla
capturas.directorio=capturas

# Directorio donde se generan los reportes
reportes.directorio=reportes

# Directorio donde se encuentran los archivos de datos de prueba
datos.directorio=src/test/resources/datos

# Directorio temporal para archivos de trabajo
temp.directorio=temp

# ====== CONFIGURACIÓN DE EVIDENCIAS ======
# Capturar pantalla en cada paso (true/false)
capturas.cada.paso=false

# Capturar pantalla solo en errores (true/false)
capturas.solo.errores=true

# Formato de capturas: PNG, JPG
capturas.formato=PNG

# Calidad de capturas JPG (1-100)
capturas.calidad=90

# Mantener capturas por días
capturas.dias.mantener=7

# ====== CONFIGURACIÓN DE LOGGING ======
# Nivel de log: TRACE, DEBUG, INFO, WARN, ERROR
log.nivel=INFO

# Archivo de log principal
log.archivo=logs/automation.log

# Mantener logs por días
log.dias.mantener=30

# Log de errores separado
log.errores.archivo=logs/errors.log

# ====== CONFIGURACIÓN DE DATOS DE PRUEBA ======
# Archivo CSV con credenciales de login
datos.credenciales.archivo=credenciales.csv

# Archivo Excel con usuarios de prueba
datos.usuarios.archivo=usuarios_prueba.xlsx

# Generar datos aleatorios si no se encuentran archivos
datos.generar.aleatorios=true

# Cantidad de usuarios aleatorios a generar
datos.usuarios.aleatorios.cantidad=10

# ====== CONFIGURACIÓN DE EJECUCIÓN PARALELA ======
# Número de hilos para ejecución paralela
ejecucion.hilos=3

# Ejecución paralela por métodos o clases: methods, classes
ejecucion.paralela.tipo=methods

# ====== CONFIGURACIÓN DE RETRY ======
# Número de reintentos para pruebas fallidas
retry.intentos.maximos=2

# Reintentar solo en cierto tipo de errores
retry.solo.timeout=true

# ====== CONFIGURACIÓN DE REPORTES ======
# Generar reporte Allure automáticamente
reporte.allure.auto=true

# Incluir capturas en reporte Allure
reporte.allure.capturas=true

# Título del reporte
reporte.titulo=Suite de Automatización Funcional

# Descripción del reporte
reporte.descripcion=Pruebas automatizadas de registro e inicio de sesión

# Versión de la aplicación bajo prueba
aplicacion.version=1.0.0

# Ambiente de prueba: DEV, QA, STAGING, PROD
ambiente.prueba=QA

# ====== CONFIGURACIÓN DE INTEGRACIÓN ======
# Habilitar integración con Slack para notificaciones
slack.habilitado=false
slack.webhook.url=

# Habilitar integración con JIRA
jira.habilitado=false
jira.url=
jira.usuario=
jira.token=

# ====== CONFIGURACIÓN DE BASE DE DATOS (OPCIONAL) ======
# URL de base de datos para validaciones
db.url=
db.usuario=
db.password=
db.driver=

# ====== CONFIGURACIÓN DE API (OPCIONAL) ======
# URL base para APIs de validación
api.base.url=
api.timeout=30
api.token=

# ====== CONFIGURACIÓN DE CROSS-BROWSER TESTING ======
# Lista de navegadores para pruebas cross-browser (separados por coma)
crossbrowser.navegadores=CHROME,FIREFOX

# Ejecutar pruebas en todos los navegadores especificados
crossbrowser.habilitado=false

# ====== CONFIGURACIÓN DE GRID/SELENIUM HUB (OPCIONAL) ======
# URL del Selenium Grid Hub
grid.hub.url=

# Usar Selenium Grid
grid.habilitado=false

# ====== CONFIGURACIÓN DE DOCKER (OPCIONAL) ======
# Ejecutar navegadores en contenedores Docker
docker.habilitado=false

# Imagen Docker para Chrome
docker.chrome.imagen=selenium/standalone-chrome:latest

# Imagen Docker para Firefox
docker.firefox.imagen=selenium/standalone-firefox:latest

# ====== CONFIGURACIÓN DE PERFORMANCE ======
# Tiempo máximo aceptable para login (milisegundos)
performance.login.max.tiempo=5000

# Tiempo máximo aceptable para registro (milisegundos)
performance.registro.max.tiempo=10000

# Monitorear uso de memoria
performance.memoria.monitorear=false

# ====== CONFIGURACIÓN DE SEGURIDAD ======
# Habilitar pruebas de seguridad XSS
seguridad.xss.habilitado=true

# Habilitar pruebas de inyección SQL
seguridad.sql.injection.habilitado=true

# ====== CONFIGURACIÓN DE ACCESIBILIDAD ======
# Habilitar pruebas de accesibilidad
accesibilidad.habilitado=false

# Nivel de conformidad WCAG: A, AA, AAA
accesibilidad.nivel.wcag=AA

# ====== CONFIGURACIÓN ESPECÍFICA DEL PROYECTO ======
# Email de administrador para pruebas
admin.email=admin@test.com
admin.password=AdminPassword123!

# Email de usuario de prueba estándar
user.email=test.user@test.com
user.password=UserPassword123!

# Dominio de emails de prueba
test.email.domain=test.com

# Prefijo para usuarios generados automáticamente
test.user.prefix=autotest_

# ====== CONFIGURACIÓN DE LIMPIEZA ======
# Limpiar datos de prueba después de la ejecución
limpieza.datos.post.ejecucion=true

# Limpiar capturas antiguas antes de la ejecución
limpieza.capturas.pre.ejecucion=true

# Limpiar logs antiguos
limpieza.logs.antiguos=true