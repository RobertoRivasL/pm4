package com.automatizacion.proyecto.pruebas;

import com.automatizacion.proyecto.base.BaseTest;
import com.automatizacion.proyecto.paginas.PaginaLogin;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

/**
 * Pruebas de Login - VERSI√ìN CON DEBUG COMPLETO
 * @author Roberto Rivas Lopez
 */
public class PruebasLogin extends BaseTest {
    
    private PaginaLogin paginaLogin;
    
    @BeforeMethod
    public void configurarPagina() {
        System.out.println("\n" + "=".repeat(80));
        System.out.println("üîß CONFIGURANDO PRUEBA DE LOGIN - VERSI√ìN DEBUG");
        System.out.println("=".repeat(80));
        
        String urlLogin = "https://practice.expandtesting.com/login";
        System.out.println("üåê Navegando a: " + urlLogin);
        
        obtenerDriver().get(urlLogin);
        
        // Esperar que la p√°gina cargue completamente
        System.out.println("‚è≥ Esperando 5 segundos para carga completa...");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
        
        paginaLogin = new PaginaLogin(obtenerDriver(), obtenerEsperaExplicita());
        
        // Debug de elementos antes de verificar
        paginaLogin.debugElementos();
        
        // Verificar que la p√°gina carg√≥
        boolean paginaVisible = paginaLogin.esPaginaVisible();
        System.out.println("üéØ RESULTADO VERIFICACI√ìN: " + paginaVisible);
        
        if (!paginaVisible) {
            System.out.println("‚ùå P√ÅGINA NO VISIBLE - CAPTURANDO EVIDENCIA");
            obtenerGestorCaptura().capturarPantalla(obtenerDriver(), "configuracion_error");
        }
        
        Assert.assertTrue(paginaVisible, "La p√°gina de login debe estar visible despu√©s de la carga");
        System.out.println("‚úÖ Configuraci√≥n completada exitosamente\n");
    }
    
    @Test(description = "Login exitoso con credenciales v√°lidas - VERSI√ìN DEBUG")
    public void testLoginExitoso() {
        System.out.println("\nüß™ === TEST: LOGIN EXITOSO (DEBUG) ===");
        System.out.println("-".repeat(50));
        
        // Usar credenciales conocidas de la p√°gina
        paginaLogin.realizarLogin("practice", "SuperSecretPassword!");
        
        // An√°lisis del resultado
        String urlActual = obtenerDriver().getCurrentUrl();
        String tituloActual = obtenerDriver().getTitle();
        
        System.out.println("üìä AN√ÅLISIS DEL RESULTADO:");
        System.out.println("   üìç URL actual: " + urlActual);
        System.out.println("   üìã T√≠tulo actual: " + tituloActual);
        
        // Verificar diferentes indicadores de √©xito
        boolean contieneSecure = urlActual.contains("secure");
        boolean noContieneLogin = !urlActual.contains("login");
        boolean cambioUrl = !urlActual.equals("https://practice.expandtesting.com/login");
        
        System.out.println("   ‚úÖ Contiene 'secure': " + contieneSecure);
        System.out.println("   ‚úÖ No contiene 'login': " + noContieneLogin);
        System.out.println("   ‚úÖ Cambi√≥ de URL: " + cambioUrl);
        
        boolean loginExitoso = contieneSecure || cambioUrl;
        System.out.println("   üéØ LOGIN EXITOSO: " + loginExitoso);
        
        // Capturar pantalla final
        obtenerGestorCaptura().capturarPantalla(obtenerDriver(), "test_login_exitoso_final");
        
        Assert.assertTrue(loginExitoso, "El login deber√≠a ser exitoso - URL: " + urlActual);
        System.out.println("‚úÖ === TEST LOGIN EXITOSO COMPLETADO ===\n");
    }
    
    @Test(description = "Debug completo de elementos")
    public void testDebugElementos() {
        System.out.println("\nüêõ === TEST: DEBUG COMPLETO ===");
        System.out.println("-".repeat(50));
        
        paginaLogin.debugElementos();
        
        // Capturar pantalla para an√°lisis visual
        obtenerGestorCaptura().capturarPantalla(obtenerDriver(), "debug_elementos");
        
        System.out.println("üì∏ Captura guardada para an√°lisis visual");
        System.out.println("‚úÖ === DEBUG COMPLETADO ===\n");
        
        // Siempre pasa - es solo para debug
        Assert.assertTrue(true, "Test de debug siempre pasa");
    }
}
